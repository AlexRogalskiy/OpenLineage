[
    {
        "eventType": "COMPLETE",
        "inputs": [
            {
                "facets": {
                    "dataSource": {
                        "name": "sqlite",
                        "uri": "sqlite://opt/data/great_expectations/data/sqlite.data"
                    },
                    "schema": {
                        "fields": [
                            {
                                "name": "user_id",
                                "type": "TEXT"
                            },
                            {
                                "name": "counterparty_id",
                                "type": "TEXT"
                            },
                            {
                                "name": "currency",
                                "type": "TEXT"
                            },
                            {
                                "name": "amount",
                                "type": "INTEGER"
                            }
                        ]
                    }
                },
                "inputFacets": {
                    "dataQuality": {
                        "columnMetrics": {
                            "amount": {
                                "count": 10,
                                "max": 1500,
                                "min": 100,
                                "sum": 6600
                            },
                            "counterparty_id": {
                                "nullCount": 0
                            },
                            "user_id": {
                                "distinctCount": 3,
                                "nullCount": 0
                            }
                        },
                        "rowCount": 10
                    },
                    "dataQualityMetrics": {
                        "columnMetrics": {
                            "amount": {
                                "count": 10,
                                "max": 1500,
                                "min": 100,
                                "sum": 6600
                            },
                            "counterparty_id": {
                                "nullCount": 0
                            },
                            "user_id": {
                                "distinctCount": 3,
                                "nullCount": 0
                            }
                        },
                        "rowCount": 10
                    },
                    "greatExpectations_assertions": {
                        "assertions": [
                            {
                                "expectationType": "expect_table_row_count_to_be_between",
                                "success": true
                            },
                            {
                                "column": "user_id",
                                "expectationType": "expect_column_values_to_not_be_null",
                                "success": true
                            },
                            {
                                "column": "user_id",
                                "expectationType": "expect_column_unique_value_count_to_be_between",
                                "success": true
                            },
                            {
                                "column": "counterparty_id",
                                "expectationType": "expect_column_values_to_not_be_null",
                                "success": true
                            },
                            {
                                "column": "amount",
                                "expectationType": "expect_column_min_to_be_between",
                                "success": true
                            },
                            {
                                "column": "amount",
                                "expectationType": "expect_column_max_to_be_between",
                                "success": true
                            },
                            {
                                "column": "amount",
                                "expectationType": "expect_column_sum_to_be_between",
                                "success": true
                            },
                            {
                                "column": "currency",
                                "expectationType": "expect_column_distinct_values_to_be_in_set",
                                "success": true
                            }
                        ]
                    }
                },
                "name": "transactions",
                "namespace": "sqlite"
            }
        ],
        "job": {
            "facets": {},
            "name": "expectations.ge_sqlite_run",
            "namespace": "food_delivery"
        },
        "outputs": [],
        "run": {
            "facets": {
                "great_expectations_meta": {
                    "batch_kwargs": {
                        "data_asset_name": "sqlite__data",
                        "datasource": "sqlite__data",
                        "table": "transactions"
                    },
                    "expectation_suite_meta": {
                        "great_expectations_version": "0.13.24",
                        "notes": {}
                    },
                    "expectation_suite_name": "expectations",
                    "run_id": {
                        "run_name": "ge_sqlite_run"
                    }
                }
            }
        }
    },
    {
        "eventType": "COMPLETE",
        "inputs": [
            {
                "facets": {
                    "dataSource": {
                        "name": "file",
                        "uri": "file://"
                    },
                    "schema": {
                        "fields": [
                            {
                                "name": "user_id",
                                "type": "int64"
                            },
                            {
                                "name": "counterparty_id",
                                "type": "int64"
                            },
                            {
                                "name": "currency",
                                "type": "object"
                            },
                            {
                                "name": "amount",
                                "type": "int64"
                            }
                        ]
                    }
                },
                "inputFacets": {
                    "dataQuality": {
                        "columnMetrics": {
                            "amount": {
                                "count": 10,
                                "max": 1500,
                                "min": 100,
                                "sum": 6600
                            },
                            "counterparty_id": {
                                "nullCount": 0
                            },
                            "user_id": {
                                "distinctCount": 3,
                                "nullCount": 0
                            }
                        },
                        "rowCount": 10
                    },
                    "dataQualityMetrics": {
                        "columnMetrics": {
                            "amount": {
                                "count": 10,
                                "max": 1500,
                                "min": 100,
                                "sum": 6600
                            },
                            "counterparty_id": {
                                "nullCount": 0
                            },
                            "user_id": {
                                "distinctCount": 3,
                                "nullCount": 0
                            }
                        },
                        "rowCount": 10
                    },
                    "greatExpectations_assertions": {
                        "assertions": [
                            {
                                "expectationType": "expect_table_row_count_to_be_between",
                                "success": true
                            },
                            {
                                "column": "user_id",
                                "expectationType": "expect_column_values_to_not_be_null",
                                "success": true
                            },
                            {
                                "column": "user_id",
                                "expectationType": "expect_column_unique_value_count_to_be_between",
                                "success": true
                            },
                            {
                                "column": "counterparty_id",
                                "expectationType": "expect_column_values_to_not_be_null",
                                "success": true
                            },
                            {
                                "column": "amount",
                                "expectationType": "expect_column_min_to_be_between",
                                "success": true
                            },
                            {
                                "column": "amount",
                                "expectationType": "expect_column_max_to_be_between",
                                "success": true
                            },
                            {
                                "column": "amount",
                                "expectationType": "expect_column_sum_to_be_between",
                                "success": true
                            },
                            {
                                "column": "currency",
                                "expectationType": "expect_column_distinct_values_to_be_in_set",
                                "success": true
                            }
                        ]
                    }
                },
                "name": "/opt/data/great_expectations/data/dataset.csv",
                "namespace": "file"
            }
        ],
        "job": {
            "facets": {},
            "name": "expectations.ge_pandas_run",
            "namespace": "food_delivery"
        },
        "outputs": [],
        "run": {
            "facets": {
                "great_expectations_meta": {
                    "batch_kwargs": {
                        "data_asset_name": "dataset",
                        "datasource": "file__data",
                        "path": "/opt/data/great_expectations/data/dataset.csv",
                        "reader_method": "read_csv"
                    },
                    "expectation_suite_meta": {
                        "great_expectations_version": "0.13.24",
                        "notes": {}
                    },
                    "expectation_suite_name": "expectations",
                    "run_id": {
                        "run_name": "ge_pandas_run"
                    }
                }
            }
        }
    },
    {
        "eventType": "COMPLETE",
        "inputs": [
            {
                "facets": {
                    "dataSource": {
                        "name": "sqlite",
                        "uri": "sqlite://opt/data/great_expectations/data/sqlite.data"
                    },
                    "schema": {
                        "fields": [
                            {
                                "name": "user_id",
                                "type": "TEXT"
                            },
                            {
                                "name": "counterparty_id",
                                "type": "TEXT"
                            },
                            {
                                "name": "currency",
                                "type": "TEXT"
                            },
                            {
                                "name": "amount",
                                "type": "INTEGER"
                            }
                        ]
                    }
                },
                "inputFacets": {
                    "dataQuality": {
                        "columnMetrics": {
                            "amount": {
                                "count": 10,
                                "max": 1500,
                                "min": 100,
                                "sum": 6600
                            },
                            "counterparty_id": {
                                "nullCount": 2
                            },
                            "user_id": {
                                "distinctCount": 3,
                                "nullCount": 0
                            }
                        },
                        "rowCount": 10
                    },
                    "dataQualityMetrics": {
                        "columnMetrics": {
                            "amount": {
                                "count": 10,
                                "max": 1500,
                                "min": 100,
                                "sum": 6600
                            },
                            "counterparty_id": {
                                "nullCount": 2
                            },
                            "user_id": {
                                "distinctCount": 3,
                                "nullCount": 0
                            }
                        },
                        "rowCount": 10
                    },
                    "greatExpectations_assertions": {
                        "assertions": [
                            {
                                "expectationType": "expect_table_row_count_to_be_between",
                                "success": true
                            },
                            {
                                "column": "user_id",
                                "expectationType": "expect_column_values_to_not_be_null",
                                "success": true
                            },
                            {
                                "column": "user_id",
                                "expectationType": "expect_column_unique_value_count_to_be_between",
                                "success": true
                            },
                            {
                                "column": "counterparty_id",
                                "expectationType": "expect_column_values_to_not_be_null",
                                "success": false
                            },
                            {
                                "column": "amount",
                                "expectationType": "expect_column_min_to_be_between",
                                "success": true
                            },
                            {
                                "column": "amount",
                                "expectationType": "expect_column_max_to_be_between",
                                "success": true
                            },
                            {
                                "column": "amount",
                                "expectationType": "expect_column_sum_to_be_between",
                                "success": true
                            },
                            {
                                "column": "currency",
                                "expectationType": "expect_column_distinct_values_to_be_in_set",
                                "success": false
                            }
                        ]
                    }
                },
                "name": "transactions_bad",
                "namespace": "sqlite"
            }
        ],
        "job": {
            "facets": {},
            "name": "expectations.ge_bad_sqlite_run",
            "namespace": "food_delivery"
        },
        "outputs": [],
        "run": {
            "facets": {
                "great_expectations_meta": {
                    "batch_kwargs": {
                        "data_asset_name": "sqlite__data",
                        "datasource": "sqlite__data",
                        "path": "/opt/data/great_expectations/data",
                        "table": "transactions_bad"
                    },
                    "expectation_suite_meta": {
                        "great_expectations_version": "0.13.24",
                        "notes": {}
                    },
                    "expectation_suite_name": "expectations",
                    "run_id": {
                        "run_name": "ge_bad_sqlite_run"
                    }
                }
            }
        }
    }
]
